# -*- coding: Latin-1 -*-
# generated by wxGlade 0.4cvs on Thu Sep  1 12:47:22 2005

import wx
import tocador

# begin wxGlade: dependencies
# end wxGlade

class JanelaPrincipal(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: JanelaPrincipal.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.sizerSaida_staticbox = wx.StaticBox(self, -1, "Saída")
        self.sizerEntrada_staticbox = wx.StaticBox(self, -1, "Entrada")
        self.janela_statusbar = self.CreateStatusBar(1, 0)
        
        # Tool Bar
        self.janela_toolbar = wx.ToolBar(self, -1, style=wx.TB_HORIZONTAL|wx.TB_DOCKABLE|wx.TB_TEXT|wx.TB_HORZ_LAYOUT|wx.TB_HORZ_TEXT)
        self.SetToolBar(self.janela_toolbar)
        self.janela_toolbar.AddLabelTool(2, "Configurar", wx.Bitmap("lib/Config.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Configurar ComunicaÃ§Ã£o", "Configurar Porta Serial")
        self.janela_toolbar.AddSeparator()
        self.janela_toolbar.AddLabelTool(1, "Sair", wx.Bitmap("lib/CloseWindow.png", wx.BITMAP_TYPE_ANY), wx.NullBitmap, wx.ITEM_NORMAL, "Sair", "Fecha o Hand Talks!")
        # Tool Bar end
        self.caixaLetras = wx.Choice(self, -1, choices=[])
        self.panel_4 = wx.Panel(self, -1)
        self.letraExibida = wx.StaticText(self, -1, "A", style=wx.ALIGN_CENTRE|wx.ST_NO_AUTORESIZE)
        self.panel_5 = wx.Panel(self, -1)

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_TOOL, self.configuraSerial, id=2)
        self.Bind(wx.EVT_TOOL, self.fechaAplicacao, id=1)
        self.Bind(wx.EVT_CHOICE, self.trocouLetra, self.caixaLetras)
        # end wxGlade
        self.Bind(wx.EVT_CLOSE, self.OnJanelaClose)

    def __set_properties(self):
        # begin wxGlade: JanelaPrincipal.__set_properties
        self.SetTitle("Hand Talks!")
        self.SetBackgroundColour(wx.SystemSettings_GetColour(wx.SYS_COLOUR_3DFACE))
        self.janela_statusbar.SetStatusWidths([-1])
        # statusbar fields
        janela_statusbar_fields = [""]
        for i in range(len(janela_statusbar_fields)):
            self.janela_statusbar.SetStatusText(janela_statusbar_fields[i], i)
        self.janela_toolbar.Realize()
        self.caixaLetras.SetSelection(0)
        self.letraExibida.SetFont(wx.Font(200, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, ""))
        # end wxGlade

        # Popula a caixa de letras
        self.caixaLetras.AppendItems( [chr (ord('A') + x) for x in range (26)] )
        self.caixaLetras.Select(0)

        # Associa um ícone
        ib = wx.IconBundle()
        ib.AddIconFromFile("lib/handtalks.ico",wx.BITMAP_TYPE_ANY)
        self.SetIcons(ib)        

    def __do_layout(self):
        # begin wxGlade: JanelaPrincipal.__do_layout
        sizerGeral = wx.BoxSizer(wx.VERTICAL)
        sizerSaida = wx.StaticBoxSizer(self.sizerSaida_staticbox, wx.VERTICAL)
        sizerEntrada = wx.StaticBoxSizer(self.sizerEntrada_staticbox, wx.HORIZONTAL)
        sizerEntrada.Add(self.caixaLetras, 1, wx.ALL|wx.FIXED_MINSIZE, 3)
        sizerGeral.Add(sizerEntrada, 0, wx.ALL|wx.EXPAND, 3)
        sizerSaida.Add(self.panel_4, 1, wx.EXPAND, 0)
        sizerSaida.Add(self.letraExibida, 0, wx.ALL|wx.EXPAND|wx.ADJUST_MINSIZE, 3)
        sizerSaida.Add(self.panel_5, 1, wx.EXPAND, 0)
        sizerGeral.Add(sizerSaida, 1, wx.ALL|wx.EXPAND|wx.ADJUST_MINSIZE, 3)
        self.SetAutoLayout(True)
        self.SetSizer(sizerGeral)
        sizerGeral.Fit(self)
        sizerGeral.SetSizeHints(self)
        self.Layout()
        self.Centre()
        # end wxGlade

    def configuraSerial(self, event): # wxGlade: JanelaPrincipal.<event_handler>
        event.Skip()

    def fechaAplicacao(self, event): # wxGlade: JanelaPrincipal.<event_handler>
        self.Close()

    def trocouLetra(self, event): # wxGlade: JanelaPrincipal.<event_handler>
        
        letra = self.caixaLetras.GetStringSelection()
        
        self.letraExibida.SetLabel (letra)
        self.janela_statusbar.SetStatusText(number=0, text=u'Reproduzindo áudio...')
	
        if not self.IsMaximized():
            self.GetSizer().SetSizeHints(self)
            self.Refresh()
            self.Update()
        
        if tocador.toca_tudo ("audio/" + letra):
            self.janela_statusbar.SetStatusText(number=0, text=u'')
        else:
            self.janela_statusbar.SetStatusText(number=0, text=u'Falha na execução!')
#            dlg = wx.MessageDialog(self, u"Falha na execução!",
#                                   'Erro',
#                                   wx.OK | wx.ICON_EXCLAMATION
#                                   )
#            dlg.ShowModal()
#            dlg.Destroy()

    def OnJanelaClose(self, event):
        if event.CanVeto:
            dlg = wx.MessageDialog(self, u"Tem certeza que deseja sair?",
                                   u'Confirmação',
                                   wx.YES_NO | wx.ICON_QUESTION
                                   )
            veta = dlg.ShowModal() == wx.ID_NO
            dlg.Destroy()
            if veta:
                return
        self.Destroy()

# end of class JanelaPrincipal


